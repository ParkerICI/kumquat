# Generated by roxygen2: do not edit by hand

S3method(plot,citrus.full.result)
S3method(plot,citrus.regressionResult)
S3method(print,citrus.clustering)
S3method(print,citrus.combinedFCSSet)
S3method(print,citrus.endpointModel)
S3method(print,citrus.foldClustering)
S3method(print,citrus.full.result)
export(citrus.buildEndpointModel)
export(citrus.buildFoldsEndpointModels)
export(citrus.buildModel.classification)
export(citrus.buildModel.continuous)
export(citrus.calculateFeature.abundances)
export(citrus.calculateFeature.medians)
export(citrus.calculateFeatures)
export(citrus.calculateFoldFeatureSet)
export(citrus.checkFileParameterConsistency)
export(citrus.checkFileParameterConsistencyUI)
export(citrus.cluster)
export(citrus.clusterAndMapFolds)
export(citrus.createHierarchyGraph)
export(citrus.endpointRegress)
export(citrus.exportCluster)
export(citrus.exportClusterUI)
export(citrus.extractModelFeatures)
export(citrus.familyList)
export(citrus.featureTypes)
export(citrus.fileEventCount)
export(citrus.full)
export(citrus.generateRegularizationThresholds)
export(citrus.generateRegularizationThresholds.classification)
export(citrus.generateRegularizationThresholds.continuous)
export(citrus.getCVMinima)
export(citrus.getClusterAncestors)
export(citrus.getClusterDecendants)
export(citrus.getFileParameters)
export(citrus.launchUI)
export(citrus.mapToClusterSpace)
export(citrus.maskCombinedFCSSet)
export(citrus.modelTypes)
export(citrus.plotClusteringHierarchy)
export(citrus.plotClusters)
export(citrus.plotHierarchicalClusterFeatureGroups)
export(citrus.predict)
export(citrus.predict.classification)
export(citrus.predict.continuous)
export(citrus.readFCS)
export(citrus.readFCSSet)
export(citrus.selectClusters)
export(citrus.selectClusters.minimumClusterSize)
export(citrus.thresholdCVs)
export(citrus.thresholdCVs.quick)
export(citrus.thresholdCVs.quick.classification)
export(citrus.thresholdCVs.quick.continuous)
export(citrus.version)
import(flowCore)
import(ggplot2)
import(glmnet)
import(igraph)
import(pamr)
import(parallel)
import(reshape2)
import(samr)
import(survival)
useDynLib(Citrus)
